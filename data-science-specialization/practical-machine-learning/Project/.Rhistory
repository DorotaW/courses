(-5.3445+0.55591*1.645)*3000+37.2
(-5.3445+0.55591*1.645)*3+37.2
(-5.3445+0.55591*1.96)*3+37.2
(-5.3445)*3+37.2+1.645*3.046
(-5.3445)*mean(mtcars$wt)+37.2-1.645*3.046
predict(m, data.frame(mean(mtcars$wt)), interval="confidence")
predict(m, data.frame(wt=mean(mtcars$wt)), interval="confidence")
predict(m, data.frame(wt=3), interval="confidence")
summary(m)
(-5.3445)*2-2*1.645*0.5591
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
install.packages("AppliedPredictiveModeling")
install.packages("caret")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
hist(training)
hist(training$SuperPlasticizer)
library(caret)
library(AppliedPredictiveModeling)
set.seed(3433)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
install.packages(c("BH", "chron", "dplyr", "evaluate", "formatR", "Formula", "ggplot2", "highr", "Hmisc", "knitr", "manipulate", "markdown", "plyr", "Rcpp", "RCurl", "rmarkdown", "scales", "shiny", "stringr", "XML", "zoo"))
mns<-as.data.frame(mns)
set.seed(7)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(40)))
mns<-as.data.frame(mns)
library(ggplot2)
ggplot(mns) + geom_density()
ggplot(mns,aes(mns)) + geom_density()
ggplot(mns,aes(mns)) + geom_density(color=cond)
ggplot(mns,aes(mns))
+ geom_density(size=2)
+ geom_vline(mns, aes(xintercept=mean(mns), colour=red),
linetype="dashed", size=1)
ggplot(mns,aes(mns))
+ geom_density()
ggplot(mns,aes(mns)) +
geom_density()
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns), colour=red,
linetype="dashed", size=1)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns), colour=red)
linetype="dashed", size=1)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns), colour=red),
linetype="dashed", size=1)
mean(mns)
mean(mns,na.rm=T)
mean(mns[1], na.rm=T)
View(mns)
mns[1]
mean(mns, na.rm=T)
mean(mns$mns, na.rm=T)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns$mns, na.rm=T), colour=red),
linetype="dashed", size=1)
set.seed(7)
mns = NULL
lambda=0.2
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,lambda)))
mns<-as.data.frame(mns)
mean(mns$mns, na.rm=T)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns$mns, na.rm=T), colour=red),
linetype="dashed", size=1)
mns, cbind(mns, mean=mean(mns$mns, na.rm=T))
mean=mean(mns$mns, na.rm=T)
library(ggplot2)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns$mns, na.rm=T)), colour=red,
linetype="dashed", size=1)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(mns, aes(xintercept=mean(mns$mns, na.rm=T)), colour='red',
linetype="dashed", size=1)
library(ggplot2)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(aes(xintercept=mean(mns$mns, na.rm=T)), colour='red',
linetype="dashed", size=1)
set.seed(7)
mns = NULL
lambda=0.2
for (i in 1 : 1000) mns = c(mns, mean(rexp(40,lambda)))
mns<-as.data.frame(mns
library(ggplot2)
ggplot(mns,aes(mns)) +
geom_density() +
geom_vline(aes(xintercept=mean(mns$mns, na.rm=T)), colour='red',
linetype="dashed", size=1)
cdat <- ddply(mns,"cond", summarise, mean=mean(mns,na.rm=T))
library(ddply)
library(plyr)
cdat <- ddply(mns,"cond", summarise, mean=mean(mns,na.rm=T))
colnames(mns)<-val
colnames(mns)<-'val'
mns<-as.data.frame(mns)
colnames(mns)<-'val'
cdat <- ddply(mns,"cond", summarise, mean=mean(val,na.rm=T))
cdat <- ddply(mns, summarise, mean=mean(val,na.rm=T))
cdat <- ddply(mns, summarise, mean_val=mean(val,na.rm=T))
mean=as.data.frame(mean_val=mean(mean$val,na.rm=T))
mean(mean$val,na.rm=T)
mean=as.data.frame(mean_val=mean(mns$val,na.rm=T))
mean(mns$val,na.rm=T)
mean=as.data.frame(mean(mns$val,na.rm=T))
mean=as.data.frame(cbind('Sample Mean', mean(mns$val,na.rm=T)))
colnames(mean)<-c('Legend','mean_val')
mean=as.data.frame(cbind('Sample Mean', as.numeric(mean(mns$val,na.rm=T)))
colnames(mean)<-c('Legend','mean_val')
as.numeric(mean(mns$val,na.rm=T))
mean=as.data.frame(cbind('Sample Mean', as.numeric(mean(mns$val,na.rm=T))))
mean=as.data.frame(cbind('Sample Mean', mean(mns$val,na.rm=T)))
mean=rbin(mean,cbind('Theoretical Mean',5))
mean=rbind(mean,cbind('Theoretical Mean',5))
mean[2]<--as.numberic(mean[2])
mean[2]<--as.numeric(mean[2])
mean[,2]<--as.numeric(mean[,2])
ggplot(mns,aes(x=val)) +
geom_density() +
geom_vline(mean, aes(xintercept=mean_val, colour=Legend,
linetype="dashed", size=1)
)
ggplot(mns,aes(x=val)) +
geom_density() +
geom_vline(mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1)
colnames(mean)<-c('Legend','mean_val')
ggplot(mns,aes(x=val)) +
geom_density() +
geom_vline(mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1)
ggplot(mns,aes(x=val)) +
geom_density()
ggplot(data=mns,aes(x=val)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1)
View(mean)
mean=as.data.frame(cbind('Sample Mean', mean(mns$val,na.rm=T)))
mean=rbind(mean,cbind('Theoretical Mean',5))
mean=as.data.frame(cbind('Sample Mean', as.numeric(mean(mns$val,na.rm=T))))
(cbind('Sample Mean', as.numeric(mean(mns$val,na.rm=T)))
cbind('Sample Mean', as.numeric(mean(mns$val,na.rm=T)))
cbind('Theoretical Mean',5)
cbind('Theoretical Mean',as.numeric(5))
merge('Theoretical Mean',as.numeric(5))
mean=as.data.frame(merge('Sample Mean', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical Mean',as.numeric(5)))
colnames(mean)<-c('Legend','mean_val')
ggplot(data=mns,aes(x=val)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1)
ggplot(data=mns,aes(x=val)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="top")
set.seed(7)
mns = NULL
lambda=0.2
n=40
for (i in 1 : 1000) mns = c(mns, mean(rexp(n,lambda)))
mns<-as.data.frame(mns)
colnames(mns)<-'val'
mean=as.data.frame(merge('Sample Mean', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical Mean',as.numeric((1/lamba*n))))
colnames(mean)<-c('Legend','mean_val')
mean=rbind(mean,merge('Theoretical Mean',as.numeric((1/lambda*n))))
as.numeric( 1/(lambda*n)))
as.numeric( 1/(lambda*n))
lambda*n
mean=as.data.frame(merge('Sample Mean', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical Mean',as.numeric( 1/lambda)))
colnames(mean)<-c('Legend','mean_val')
ggplot(data=mns,aes(x=val)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="top")
mns<-as.data.frame(merge('Sample',mns))
colnames(mns)<-c('Legend','mean_val')
mean=as.data.frame(merge('Sample', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical',as.numeric( 1/lambda)))
colnames(mean)<-c('Legend','mean_val')
colnames(mns)<-c('Legend','val')
mean=as.data.frame(merge('Sample', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical',as.numeric( 1/lambda)))
colnames(mean)<-c('Legend','mean_val')
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="top")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="top") +
labs(title="Theoretical and Sample Mean")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Mea
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Mean") +
geom_text(data = mean, aes(label = mean_val), hjust = 0.7,
vjust = 1))
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Mean") +
geom_text(data = mean, aes(label = mean_val), hjust = 0.7,
vjust = 1)
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
geom_text(data = mean, aes(label = mean_val))
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),
linetype="dashed", size=1) +
geom_text(data=mean,aes(x=mean_val,y=c(0.5,0.5),label=mean_val),vjust=0)
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Mean")
setwd("C:/Users/Dorota/Github/Data_Science_Specialization/Practical_Machine_Learning_Coursera_Course/Project")
sdev[,2]+mean[2]
sdev[,2]+mean[2]
sdev=as.data.frame(merge('Sample', as.numeric((sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/lambda)))
colnames(sdev)<-c('Legend','sdev_val')
sdev=as.data.frame(merge('Sample', as.numeric((sd(mns$val,na.rm=T))))
)
sdev=as.data.frame(merge('Sample', as.numeric((sd(mns$val,na.rm=T)))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/lambda)))
colnames(sdev)<-c('Legend','sdev_val')
sdev=as.data.frame(merge('Sample', as.numeric((sd(mns$val,na.rm=T)))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/lambda)))
colnames(sdev)<-c('Legend','sdev_val')
sdev[,2]+mean[2]
1/(lambda*sqrt(i))
sqrt(i)
sd(mns$val,na.rm=T)
1/(lambda*sqrt(i-1)
as.numeric( 1/(lambda*sqrt(i-1)
as.numeric( 1/(lambda*sqrt(i-1)))
sdev=as.data.frame(merge('Sample', as.numeric(sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/(lambda*sqrt(n))) ))
colnames(sdev)<-c('Legend','sdev_val')
sdev[,2]+mean[2]
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=sdev_val, colour=Legend),linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Standard Deviation") +
guides(fill=guide_legend(title='Mean')
)
set.seed(7)
rnormal = rnorm(n,1/lambda,/1/(n*lambda)
rnomal<-as.data.frame(merge('Normal',rnormal ))
dist<-rbind(msn,rnormal)
#plot
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution") +
guides(fill=guide_legend(title='Distribution')
)
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution")
set.seed(7)
rnormal = rnorm(n,1/lambda,/1/(n*lambda)
rnomal<-as.data.frame(merge('Normal',rnormal ))
dist<-rbind(msn,rnormal)
rnormal = rnorm(n,1/lambda,/1/(n*lambda)
rnormal=NULL
for (i in 1 : 1000) rnormal = rnorm(1/lambda,/1/(n*lambda))
rnormal=NULL
for (i in 1 : 1000) rnormal = rnorm(1/lambda,1/(n*lambda))
rnomal<-as.data.frame(merge('Normal',rnormal ))
dist<-rbind(msn,rnormal)
dist<-rbind(mns,rnormal)
rnomal<-as.data.frame(merge('Normal',rnormal ))
rnormal<-as.data.frame(merge('Normal',rnormal ))
rnorm(1/lambda,1/(n*lambda))
rnorm(1000,1/lambda,1/(n*lambda))
set.seed(7)
rnormal = rnorm(1000,1/lambda,1/(n*lambda))
rnormal<-as.data.frame(merge('Normal',rnormal ))
dist<-rbind(mns,rnormal)
set.seed(7)
rnormal = rnorm(1000,1/lambda,1/(n*lambda))
rnormal<-as.data.frame(merge('Normal',rnormal ))
dist<-rbind(mns,rnormal)
rbind(mns,rnormal)
set.seed(7)
rnormal = rnorm(1000,1/lambda,1/(n*lambda))
rnormal<-as.data.frame(merge('Normal',rnormal ))
colnames(rnormal)<-c('Legend','val')
dist<-rbind(mns,rnormal)
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution") +
guides(fill=guide_legend(title='Distribution'))
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution") +
scale_shape_discrete(name  ="DIstribution")
)
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution")) +
scale_shape_discrete(name  ="DIstribution")
1/(n*lambda)
n*lambda
1/(lambda)
set.seed(7)
mns = NULL
lambda=0.2
n=40
for (i in 1 : 1000) mns = c(mns, mean(rexp(n,lambda)))
mns<-as.data.frame(merge('Sample',mns))
colnames(mns)<-c('Legend','val')
mean=as.data.frame(merge('Sample', as.numeric(mean(mns$val,na.rm=T))))
mean=rbind(mean,merge('Theoretical',as.numeric( 1/lambda)))
colnames(mean)<-c('Legend','mean_val')
#plot
library(ggplot2)
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean, aes(xintercept=mean_val, colour=Legend),linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Mean")
sdev=as.data.frame(merge('Sample', as.numeric(sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/(lambda*sqrt(n))) ))
colnames(sdev)<-c('Legend','sdev_val')
sdev[,2]+mean[2]
#plot
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=stev, aes(xintercept=sdev_val, colour=Legend),linetype="dashed", size=1) +
theme(legend.position="bottom") +
labs(title="Theoretical and Sample Standard Deviation") +
guides(fill=guide_legend(title='St Deviation'))
sdev[,2]+mean[2]
sdev<-cdind(sdev,sm_value=sdev[,2]+mean[2])
sdev=as.data.frame(merge('Sample', as.numeric(sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/(lambda*sqrt(n))) ))
colnames(sdev)<-c('Legend','sdev_val')
sdev<-cbind(sdev,sm_value=sdev[,2]+mean[2])
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[mean$Legend='Sample'], aes(xintercept=mean_val), colour=black,linetype="dashed", size=1) +
geom_vline(data=stev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=1) +
theme(legend.position="bottom")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[mean$Legend='Sample'], aes(xintercept=mean_val), colour=black,linetype="dashed", size=1) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=1) +
theme(legend.position="bottom")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[mean$Legend='Sample',], aes(xintercept=mean_val), colour=black,linetype="dashed", size=1)
sdev<-cbind(sdev,sm_value=sdev[1,2]+mean[2])
sampleemean<-mean[1, ]
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[1, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=1)
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[1, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=0.5) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=2) +
theme(legend.position="bottom")
sdev=as.data.frame(merge('Sample', as.numeric(sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/(lambda*sqrt(n))) ))
colnames(sdev)<-c('Legend','sdev_val')
sdev<-cbind(sdev,sm_val=sdev[1,2]+mean[2])
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[1, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=0.5) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=2) +
theme(legend.position="bottom")
cbind(sdev,sm_val=sdev[1,2]+mean[2])
sdev[,2]+mean[1,2]
(sm_val=sdev[,2]+mean[1,2])'
)
''
sdev[,2]+mean[,2]
sm_val=sdev[,2]+mean[,2])
sm_val=sdev[,2]+mean[,2]
#)
sm_val=sdev[,2]+mean[,2]
as.data.frame(sdev[,2]+mean[,2])
as.data.frame(sm_vl=sdev[,2]+mean[,2]
)
sdev=as.data.frame(merge('Sample', as.numeric(sd(mns$val,na.rm=T))))
sdev=rbind(sdev,merge('Theoretical',as.numeric( 1/(lambda*sqrt(n))) ))
sdev<-cbind(sdev,as.data.frame(sdev[,2]+mean[,2]))
colnames(sdev)<-c('Legend','sdev_val','sm_val')
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[1, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=0.5) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=2) +
theme(legend.position="bottom")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[2, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=0.5) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=1.5) +
theme(legend.position="bottom")
ggplot(data=mns,aes(x=val,colour=Legend)) +
geom_density() +
geom_vline(data=mean[2, ], aes(xintercept=mean_val), colour='black',linetype="dashed", size=0.25) +
geom_vline(data=sdev, aes(xintercept=sm_val, colour=Legend),linetype="dashed", size=1.1) +
theme(legend.position="bottom")
#normal distribution
set.seed(7)
rnormal = rnorm(1000,1/lambda,1/(sqrt(n)*lambda))
rnormal<-as.data.frame(merge('Normal',rnormal ))
colnames(rnormal)<-c('Legend','val')
dist<-rbind(mns,rnormal)
#plot
ggplot(data=dist,aes(x=val,colour=Legend)) +
geom_density() +
theme(legend.position="bottom") +
labs(title="Sample and Normal Distribution") +
scale_shape_discrete(name ="DIstribution")
data(TootGrow)
data(ToothGrow)
data(ToothGrowth)
data<-data(ToothGrowth)
ToothGrowth
data<-ToothGrowth
library(ggplot2)
ggplot(data, aes(x = dose, y = len, colour = Supp)) +
geom_point() + opts(title = "Length of Tooth by Dosage of the Vitamine C")
library(ggplot2)
ggplot(data, aes(x = dose, y = len, colour = Supp)) +
geom_point() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
library(ggplot2)
ggplot(data, aes(x = dose, y = len, colour = supp)) +
geom_point() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
ggplot(data, aes(x = dose, y = len, colour = supp)) +
geom_boxplot()
ggplot(data, aes(x  = len, colour = supp)) +
geom_boxplot()
data$dose<-as.factor(dose)
data$dose<-as.factor(data$dose)
ggplot(data, aes(x  = len, colour = supp)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
ggplot(data, aes(y = len, colour = supp)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
ggplot(data, aes(x=dose, y = len, colour = dose)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
library(ggplot2)
ggplot(data, aes(x=dose, y = len, colour = dose, fill=dose)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
library(ggplot2)
ggplot(data, aes(x=dose, y = len, colour = dose, fill=dose)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C")
+ facet_grid(. ~ supp)
ggplot(data, aes(x=dose, y = len, fill=dose)) +
geom_boxplot() + labs(title = "Length of Tooth by Dosage of the Vitamine C") + facet_grid( . ~ supp)
dtsupp12<- subset(data, supp %in% c(1, 2))
dtsupp12<- subset(data, supp %in% c(1, 2))

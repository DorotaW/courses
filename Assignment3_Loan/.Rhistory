data <- read.csv("songs.csv", header = TRUE)
data <- read.csv("parole.csv", header = TRUE)
str(data)
summary(data)
0.1156*675
summary(data)
data$crime<-as.factor(data$crime)
data$state<-as.factor(data$state)
summary(data)
set.seed(144)
library(caTools)
split = sample.split(parole$violator, SplitRatio = 0.7)
train = subset(parole, split == TRUE)
test = subset(parole, split == FALSE)
Log1 = glm(violator ~ ., data=train, family=binomial)
summary(Log1)
set.seed(144)
library(caTools)
split = sample.split(data$violator, SplitRatio = 0.7)
train = subset(data, split == TRUE)
test = subset(data, split == FALSE)
Log1 = glm(violator ~ ., data=train, family=binomial)
summary(Log1)
View(data)
[male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2]
cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2)
predict(LOg1,cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2),type='response')
predict(Log1,cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2),type='response')
predict(Log1,as.dataframe(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2)),type='response')
predict(Log1,as.data.frame(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2)),type='response')
newdata<-as.data.frame(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2)
newdata<-as.data.frame(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2))
newdata<-as.data.frame(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2))
rbind(test,newdata)
newdata<-as.data.frame(cbind(male=1,race=1,age=50,state=1,time.served=3,max.sentence=12,multiple.offenses=0,crime=2,violator=1))
rbind(test,newdata)
a<-rbind(test,newdata)
a<-a[203,
]
predict(Log1,a,type='response')
predict(Log1,a,type='response')/(1-predict(Log1,a,type='response'))
max(predict(Log1,test,type='response'))
pred<-cases(
"1"=(predict(Log1,test,type='response')>=0.5),
"0"=TRUE)
confusionMatrix(pred,test$violator)
library(memisc)
pred<-cases(
"1"=(predict(Log1,test,type='response')>=0.5),
"0"=TRUE)
confusionMatrix(pred,test$violator)
library(caret)
pred<-cases(
"1"=(predict(Log1,test,type='response')>=0.5),
"0"=TRUE)
confusionMatrix(pred,test$violator)
confusionMatrix(test$violator,pred)
table(pred)
confusionMatrix(pred,test$violator)
167/202
(167+12)/202
install.packages("ROCR")
library(ROCR)
performance(pred,"auc")
pred2<-prediction(Log1,test)
pred2<-prediction(pred,test$violator)
pred
pred2<-prediction(as.numeric(as.char(pred)),test$violator)
as.charaxter(pred)
as.character(pred)
pred2<-prediction(as.numeric(as.character(pred)),test$violator)
performance(pred,"auc")
performance(pred2,"auc")
performance(pred2)
pred2<-prediction(predict(Log1,test,type='response'),test$violator)
performance(pred2,"auc")
setwd("C:/Users/Dorota/Github/The_Analytics_Edge/Assignment3_Loan")
data <- read.csv("loan.csv", header = TRUE)
data <- read.csv("loan.csv", header = TRUE)
data <- read.csv("loans.csv", header = TRUE)
data <- read.csv("loans.csv", header = TRUE)
table(data$not.fully.paid)
summary(data)
is.na(data)
colSums(!is.na(data) == 0)
loans <- read.csv("loans.csv", header = TRUE)
table(loans$not.fully.paid)
summary(loans)
colSums(!is.na(loans) == 0)
library(mice)
set.seed(144)
vars.for.imputation = setdiff(names(loans), "not.fully.paid")
imputed = complete(mice(loans[vars.for.imputation]))
loans[vars.for.imputation] = imputed
install.packages("mice")
loans <- read.csv("loans.csv", header = TRUE)
table(loans$not.fully.paid)
summary(loans)
colSums(!is.na(loans) == 0)
library(mice)
set.seed(144)
vars.for.imputation = setdiff(names(loans), "not.fully.paid")
imputed = complete(mice(loans[vars.for.imputation]))
loans[vars.for.imputation] = imputed
set.seed(144)
library(caTools)
split = sample.split(loans$violator, SplitRatio = 0.7)
train = subset(loans, split == TRUE)
test = subset(loans, split == FALSE)
set.seed(144)
library(caTools)
split = sample.split(loans$not.fully.paid, SplitRatio = 0.7)
train = subset(loans, split == TRUE)
test = subset(loans, split == FALSE)
Log1 = glm(not.fully.paid ~ ., data=loans, family=binomial)
summary(Log1)
a<-predict(Log1,test,type='response')
pred<-as.numeric(as.character(cases(
"1"=(a>=0.5),
"0"=TRUE)))
library(memisc)
library(caret)
pred<-as.numeric(as.character(cases(
"1"=(a>=0.5),
"0"=TRUE)))
confusionMatrix(pred,test$not.fully.paid)
(2402+11)/(2873)
library(ROCR)
pred2<-prediction(a,test$not.fully.paid)
performance(pred2,"auc")
Log2 = glm(not.fully.paid ~ int.rate., data=loans, family=binomial)
Log2 = glm(not.fully.paid ~ int.rate, data=loans, family=binomial)
summary(Log2)
a<-predict(Log2,test,type='response')
max(a)
library(ROCR)
pred2<-prediction(a,test$not.fully.paid)
performance(pred2,"auc")
10 * exp(0.06*3)
test$profit = exp(test$int.rate*3) - 1
test$profit[test$not.fully.paid == 1] = -1
10*max(test$profit)
highInterest<subset(test,int.rate>=0.15)
highInterest<-subset(test,int.rate>=0.15)
max(highInterest$profit)
summary(highInterest)
avg(highInterest$profit)
test$risk<-(predict(Log2,test,type='response'
)
test$profit = exp(test$int.rate*3) - 1
test$profit[test$not.fully.paid == 1] = -1
10*max(test$profit)
highInterest<-subset(test,int.rate>=0.15)
highInterest<-highInterest[ord(risk),]
highInterest<-highInterest[order(highInterest$risk),]
highInterest<-highInterest[order(highInterest$risk)]
order(highInterest$risk)
highInterest$risk
test$risk<-predict(Log2,test,type='response')
test$profit = exp(test$int.rate*3) - 1
test$profit[test$not.fully.paid == 1] = -1
10*max(test$profit)
highInterest<-subset(test,int.rate>=0.15)
highInterest<-highInterest[order(highInterest$risk)]
highInterest<-highInterest[order(highInterest$risk),]
mean(highInterest[1:100,13])
View(highInterest)
highInterest[1:100,13]
mean(highInterest[1:100,15])
